openapi: 3.1.0
info:
    title: HuskyEats API
    version: 1.0.0
    description: UConn dining hall menu items and nutrition information
servers:
    - url: https://husky-eats.onrender.com/api
    - url: http://localhost:4000/api
components:
    securitySchemes:
        ApiKeyAuth:
            type: apiKey
            in: header
            name: x-api-key
    schemas:
        DiningHall:
            type: object
            properties:
                id: { type: integer }
                name: { type: string }
                wdbreakfast: { type: string }
                wdlunch: { type: string }
                wddinner: { type: string }
                wesatbreakfast: { type: string }
                wesunbreakfast: { type: string }
                webrunch: { type: string }
                wedinner: { type: string }
                latenight: { type: string }
                haslatenight: { type: boolean }
                hasgrabngo: { type: boolean }
        MenuItem:
            type: object
            properties:
                id: { type: integer }
                name: { type: string }
                meal: { type: string }
                hallid: { type: integer }
                date: { type: string, format: date }
                station: { type: string }
        NutritionFacts:
            type: object
            properties:
                name: { type: string }
                vegan: { type: boolean }
                vegetarian: { type: boolean }
                glutenfriendly: { type: boolean }
                smartcheck: { type: boolean }
                lesssodium: { type: boolean }
                nogarliconion: { type: boolean }
                containsnuts: { type: boolean }
                servingsize: { type: string }
                calories: { type: integer }
                totalfat_g: { type: float }
                saturatedfat_g: { type: float }
                transfat_g: { type: float }
                cholesterol_mg: { type: float }
                sodium_mg: { type: float }
                calcium_mg: { type: float }
                iron_mg: { type: float }
                totalcarbohydrate_g: { type: float }
                dietaryfiber_g: { type: float }
                totalsugars_g: { type: float }
                addedsugars_g: { type: float }
                protein_g: { type: float }
                vitamind_mcg: { type: float }
                potassium_mg: { type: float }
                allergens: { type: string }
        ErrorResponse:
            type: object
            properties:
                error: { type: string }
tags:
    - name: dininghall
      description: List dining halls
    - name: menu
      description: Find menus
    - name: menuitem
      description: List menu items or find nutrition facts, upsert new menu items
    - name: nutrition
      description: Upsert nutrition facts
paths:
    /:
        get:
            summary: Health check
            responses:
                200:
                    description: API is running and reachable
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    ok: { type: boolean }
    /dininghall:
        get:
            tags:
                - dininghall
            summary: List dining halls
            responses:
                200:
                    description: All dining halls
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/DiningHall'
                500:
                    description: Failure to retrieve dining halls
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorResponse'
    /dininghall/{id}:
        get:
            tags:
                - dininghall
            summary: Find matching dininghall
            parameters:
                - name: id
                  in: path
                  description: ID of dininghall to return
                  required: true
                  schema:
                    type: integer
                    format: int64
            responses:
                200:
                    description: Matching dining hall
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DiningHall'
                500:
                    description: Failure to retrieve dining hall
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorResponse'
    /menu:
        get:
            tags:
                - menu
            summary: List items on the menu
            parameters:
                - in: query
                  name: hallid
                  schema: { type: integer }
                  description: autofills with 1
                - in: query
                  name: meal
                  schema: { type: string }
                  description: autofills with 'lunch'
                - in: query
                  name: date
                  schema: { type: string, format: date }
                  description: autofills with today's date, YYYY-MM-DD
            responses:
                200:
                    description: Matching menu's items
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/MenuItem'
                500:
                    description: Failed to retrieve menu items
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorResponse'
    /menuitem:
        post:
            tags:
                - menuitem
            summary: Upsert menu items to database
            security:
                - ApiKeyAuth: []
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: array
                            items:
                                $ref: '#/components/schemas/MenuItem'
            responses:
                200:
                    description: Upsert successful
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    ok: { type: boolean }
                500:
                    description: Ingest error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorResponse'
        get:
            tags:
                - menuitem
            summary: List all menu items
            responses:
                200:
                    description: All menu items
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/MenuItem'
                500:
                    description: Failed to retrieve menu items
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorResponse'
    /menuitem/{id}:
        get:
            tags:
                - menuitem
            summary: Fetch an item's nutrition facts
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                    type: integer
                    format: int64
            responses:
                200:
                    description: Matching nutrition facts
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/NutritionFacts'
                500:
                    description: Failed to retireve nutrition facts
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorResponse'
    /nutrition:
        post:
            tags:
                - nutrition
            summary: Upsert nutrition facts to database
            security:
                - ApiKeyAuth: []
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: array
                            items:
                                $ref: '#/components/schemas/NutritionFacts'
            responses:
                200:
                    description: Upsert successful
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    ok: { type: boolean }
                500:
                    description: Ingest error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorResponse'
